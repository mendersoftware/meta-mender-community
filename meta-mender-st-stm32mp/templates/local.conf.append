
# Appended fragment from meta-mender-community/meta-mender-st-stm32mp/templates

MACHINE ?= "stm32mp1-disco"

# Disable GRUB on ARM
MENDER_FEATURES_ENABLE_append = " mender-uboot mender-image-gpt"
MENDER_FEATURES_DISABLE_append = " mender-grub mender-image-uefi"

# In file ./meta-st-stm32mp/conf/machine/include/st-machine-common-stm32mp.inc,
# EXTRA_IMAGECMD_ext4 is defined to set a label based on the IMAGE_SUFFIX. But
# IMAGE_SUFFIX is set to an empty string in meta-mender which results in invalid
# arguments to the '-L' option.
#
# Just remove the '-L' argument
EXTRA_IMAGECMD_ext4_remove = "-L"

# st-partitions-image is a customer image format that is used by the STM32MP BSP
# and it is not compatible with Mender image format requirements.
#
# Disable, as compatible image formats will be provided by meta-mender.
IMAGE_CLASSES_remove = "st-partitions-image"

# This is needed because we disable 'st-partitions-image' but this file will
# still have the dependencies on bootfs, vendorfs and userfs images.
WKS_FILE_DEPENDS_remove = "st-image-bootfs st-image-vendorfs st-image-userfs"

# Disable flashlayout config
#
# This generates a set of configuration files to be used by the STM32 flash tool,
# as the flash layout is not compatible with what we generate in Mender we can
# disable this.
#
# It also produces an build error if left enabled, as we have disabled build of
# the bootfs/vendorfs/userfs images which this configuration relies on.
ENABLE_FLASHLAYOUT_CONFIG = "0"

# STM32MP BSP defines a custom package called kernel-imagebootfs which contains
# the dtb and kernel files
#
# These are originally added in mender-setup-image.inc
MACHINE_ESSENTIAL_EXTRA_RDEPENDS_remove_mender-image_arm ="kernel-devicetree"
MACHINE_ESSENTIAL_EXTRA_RDEPENDS_append_mender-image_arm = " kernel-imagebootfs"

MENDER_STORAGE_TOTAL_SIZE_MB = "2048"

# Upstream PR: https://github.com/STMicroelectronics/meta-st-stm32mp/pull/11
PREFERRED_PROVIDER_u-boot = "u-boot-stm32mp"

# Add custom image class that appends STM32MP bootloader to the gptimg
IMAGE_CLASSES += "stm32mp-gptimg"

MENDER_BOOT_PART = "${MENDER_STORAGE_DEVICE_BASE}4"
MENDER_ROOTFS_PART_A = "${MENDER_STORAGE_DEVICE_BASE}5"
MENDER_ROOTFS_PART_B = "${MENDER_STORAGE_DEVICE_BASE}6"
MENDER_DATA_PART = "${MENDER_STORAGE_DEVICE_BASE}7"

IMAGE_FSTYPES_append = " gptimg.gz"

IMAGE_BOOT_FILES = "stm32mp1-boot.scr;boot.scr"

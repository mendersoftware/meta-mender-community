#!/bin/sh -e

mnt=
varfile=
VARS="mender_boot_part mender_boot_part_hex upgrade_available bootcount"

cleanup() {
    if [ -f "$varfile" ]; then
        rm -f "$varfile"
    fi
    [ -n "$mnt" ] || return
    for d in dev sys run; do
	if mountpoint -q "${mnt}/${d}"; then
	    umount "${mnt}/${d}" >/dev/null 2>&1 || true
	fi
    done
    if mountpoint -q "$mnt"; then
        umount "$mnt" >/dev/null 2>&1 || true
    fi
    rmdir "$mnt" >/dev/null 2>&1 || true
}

echo "Migrating U-Boot environment variables for rollback" >&2

varfile=`mktemp -p /run -t envvars.XXXXXX`
if [ -z "$varfile" -o ! -f "$varfile" ]; then
    echo "ERR: could not create temp file for environment variables" >&2
    cleanup
    exit 1
fi
for v in $VARS; do
    if ! fw_printenv $v >/dev/null 2>&1; then
        echo "$v" >> "$varfile"
    else
        val=`fw_printenv -n $v 2>/dev/null`
        echo "$v $val" >> "$varfile"
    fi
done

new_boot_part=`fw_printenv -n mender_boot_part`
mnt=`mktemp -d -t ubvars.XXXXXX`
if [ -z "$mnt" -o ! -d "$mnt" ]; then
    echo "ERR: could not create directory for mounting rollback partition" >&2
    exit 1
fi
mount /dev/mmcblk0p${new_boot_part} "$mnt"
if [ ! -e "${mnt}/usr/sbin/fw_setenv" -o ! -e "${mnt}/etc/fw_env.config" ]; then
    echo "ERR: Missing U-Boot utils or config in rollback rootfs" >&2
    cleanup
    exit 1
fi
for d in dev sys run; do
    if ! mount --bind /${d} "${mnt}/${d}"; then
	echo "ERR: could not bind-mount /${d} into for U-Boot update" >&2
	cleanup
	exit 1	
    fi
done
if ! chroot ${mnt} /usr/sbin/fw_setenv -s "$varfile"; then
    echo "ERR: could not update U-Boot environment" >&2
    cleanup
    exit 1
fi
cleanup
exit 0

Index: git/configs/colibri-imx6ull_defconfig
===================================================================
--- git.orig/configs/colibri-imx6ull_defconfig
+++ git/configs/colibri-imx6ull_defconfig
@@ -47,12 +47,12 @@ CONFIG_CMD_CACHE=y
 CONFIG_CMD_REGULATOR=y
 CONFIG_CMD_MTDPARTS=y
 CONFIG_MTDIDS_DEFAULT="nand0=gpmi-nand"
-CONFIG_MTDPARTS_DEFAULT="mtdparts=gpmi-nand:512k(mx6ull-bcb),1536k(u-boot1)ro,1536k(u-boot2)ro,512k(u-boot-env),-(ubi)"
+CONFIG_MTDPARTS_DEFAULT="mtdparts=gpmi-nand:512k(mx6ull-bcb),1536k(u-boot1)ro,1536k(u-boot2)ro,-(ubi)"
 CONFIG_CMD_UBI=y
 # CONFIG_ISO_PARTITION is not set
 CONFIG_OF_CONTROL=y
 CONFIG_DEFAULT_DEVICE_TREE="imx6ull-colibri"
-CONFIG_ENV_IS_IN_NAND=y
+CONFIG_ENV_IS_IN_UBI=y
 CONFIG_SYS_RELOC_GD_ENV_ADDR=y
 CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
 CONFIG_IP_DEFRAG=y
@@ -93,3 +93,7 @@ CONFIG_USB_GADGET_DOWNLOAD=y
 CONFIG_OF_LIBFDT_OVERLAY=y
 CONFIG_FDT_FIXUP_PARTITIONS=y
 CONFIG_SYS_WHITE_ON_BLACK=y
+CONFIG_SYS_REDUNDAND_ENVIRONMENT=y
+CONFIG_ENV_UBI_PART="ubi"
+CONFIG_ENV_UBI_VOLUME="u-boot-env-1"
+CONFIG_ENV_UBI_VOLUME_REDUND="u-boot-env-2"
Index: git/include/configs/colibri-imx6ull.h
===================================================================
--- git.orig/include/configs/colibri-imx6ull.h
+++ git/include/configs/colibri-imx6ull.h
@@ -50,18 +50,21 @@
 		"nand write ${loadaddr} u-boot2 ${filesize}\0"
 
 #define UBI_BOOTCMD \
-	"ubiargs=ubi.mtd=ubi root=ubi0:rootfs rw rootfstype=ubifs " \
+	"ubiargs=ubi.mtd=${mender_mtd_ubi_dev_name} root=${mender_kernel_root} rw rootfstype=ubifs " \
 		"ubi.fm_autoconvert=1\0" \
 	"ubiboot=run setup; " \
-		"setenv bootargs ${defargs} ${ubiargs} " \
+		"setenv bootargs ${defargs} ${ubiargs} ${mtdparts} " \
 		"${setupargs} ${vidargs}; echo Booting from NAND...; " \
-		"ubi part ubi &&" \
-		"ubi read ${kernel_addr_r} kernel && " \
-		"ubi read ${fdt_addr_r} dtb && " \
-		"run fdt_fixup && bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
+		"run mender_setup; "                                   \
+		"ubi part ${mender_mtd_ubi_dev_name} && "              \
+		"ubifsmount ${mender_uboot_root_name} && "             \
+		"ubifsload ${kernel_addr_r} /boot/zImage && "          \
+		"ubifsload ${fdt_addr_r} /boot/${fdtfile} && "         \
+		"bootz ${kernel_addr_r} - ${fdt_addr_r}\0"
+
 
 /* Run Distro Boot script if ubiboot fails */
-#define CONFIG_BOOTCOMMAND "run ubiboot || run distro_bootcmd;"
+#define CONFIG_BOOTCOMMAND "run ubiboot; run mender_try_to_recover; "
 
 #define BOOT_TARGET_DEVICES(func) \
 	func(MMC, mmc, 0) \
